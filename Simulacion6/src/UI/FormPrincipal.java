/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import java.text.DecimalFormat;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jeny_ and Adan menor que, tres
 */
public class FormPrincipal extends javax.swing.JFrame {
    /**
     * Creates new form FormPrincipal
     */
    public FormPrincipal() {
        initComponents();
        
       
        
        //INICIO DEL PROGRAMA
        PanelInicio.setVisible(true);
        PanelApp.setVisible(false);
        PanelGenerador.setVisible(false);
        encontrado=false;
       // df= new DecimalFormat("#.0000");
        n= new int[2];
        //VARIABLES DE LA APLICACION
        
        this.DemandaMensual = new Double[][]{{
             35.00,0.00,0.010,},
            {36.00,0.010,0.025},
            {37.00,0.025,0.045},
            {38.00,0.025,0.065},
            {39.00,0.065,0.087},
            {40.00,0.087,0.110},
            {41.00,0.0110,0.135},
            {42.00,0.135,0.162},
            {43.00,0.162,0.190},
            {44.00,0.190,0.219},
            {45.00,0.219,0.254},
            {46.00,0.254,0.299},
            {47.00,0.299,0.359},
            {48.00,0.359,0.424},
            {49.00,0.424,0.494},
            {50.00,0.494,0.574},
            {51.00,0.574,0.649},
            {52.00,0.649,0.719},
            {53.00,0.719,0.784},
            {54.00,0.784,0.844},
            {55.00,0.844,0.894},
            {56.00,0.894,0.934},
            {57.00,0.934,0.964},
            {58.00,0.964,0.980},
            {59.00,0.980,0.995},
            {60.00,0.995,1.00}
        };
        
        this.Meses=new Double[][]{
            {1.00,1.20},
            {2.00,1.00},
            {3.00,0.90},
            {4.00,0.80},
            {5.00,.80},
            {6.00,0.70},
            {7.00,0.80},
            {8.00,0.90},
            {9.00,1.00},
            {10.00,1.20},
            {11.00,1.30},
            {12.00,1.40}           
        };
        
        this.TiempoEntrega= new Double[][]{           
            {1.00,0.00,0.30},
            {2.00,0.30,0.70},
            {3.00,0.70,1.00}
        };
        
        
    }
    
    /*VARIABLES DEL GENERADOR*/
    private  Double[][] datos;
    String cabeceraGenerador[]={"Iteracion","Numero P.A","xo"};
    boolean realizarFrecuencia=false;
    boolean realizarCorrida=false;
    public  int ciclos;
    Double[] DatosGenerados;
    Double[] CopiaDatos;
    Double[][] Meses;
    int datosrepetidos=0;
    boolean encontrado;
    int[] n;
  
    
    /*VARIABLES DE LA APLICACION    */
    private DefaultTableModel tabla;      
    public Double[] PseudoAleatorio;
    Double[][] DemandaMensual;
    boolean hayPedido=false;
    int meses;
    int mesllegada;
    
    Double[][] TiempoEntrega;
    public int q,r,invInicial,invFinal,demandaAjustada,faltante,mesesOrden;
    public float invMensual;
    String cabeceraApp[]={"Mes","Inv.Inicial","Numero PseudoA","Demanda Ajustada","Inv.Final","Faltante","Orden","Inv Mensual"};
    
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")    
   
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelIzqProyecto = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        panelOpciones = new javax.swing.JPanel();
        btnGenerarNumeros = new javax.swing.JButton();
        bntInicio = new javax.swing.JButton();
        btnAplicacion = new javax.swing.JButton();
        PanelApp = new javax.swing.JPanel();
        LabelFondo = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtConclusionSimulacion = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaResultados = new javax.swing.JTable();
        panelDatos = new javax.swing.JPanel();
        btnIniciarSimulacion = new javax.swing.JButton();
        qtext = new javax.swing.JTextField();
        invItext = new javax.swing.JTextField();
        labelR2 = new javax.swing.JLabel();
        labelQ = new javax.swing.JLabel();
        labelInventario = new javax.swing.JLabel();
        rtext = new javax.swing.JTextField();
        LabelFondo2 = new javax.swing.JLabel();
        PanelGenerador = new javax.swing.JPanel();
        PanelGeneradorContenedor = new javax.swing.JPanel();
        inputA = new javax.swing.JTextField();
        inputC = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        inputXo = new javax.swing.JTextField();
        inputCiclos = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnGenerar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaNumeros = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        inputM = new javax.swing.JTextField();
        PanelPruebas = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TablaCorridas = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        tablaFrecuencia = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        btnFrecuencia = new javax.swing.JToggleButton();
        btnCorridas = new javax.swing.JToggleButton();
        PanelInicio = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PanelIzqProyecto.setBackground(new java.awt.Color(19, 23, 31));
        PanelIzqProyecto.setForeground(new java.awt.Color(255, 255, 255));
        PanelIzqProyecto.setToolTipText("ACERCA DE\n\nEn este programa se plantea simular \nun almacen. es decir, control de\nventas y compras con el fin de\nestimar si el metodo empleado nos\nfuncionara o nos enviara  a la \nquiebra.\n\nPara ello se utilizaran numeros\npseudoaleatorios, a los cuales\nles aplicaremos dos pruebas para\nsaber si estan uniformemente\ndistribuidos, de ser asi nos seran de\nutilidad para nuestra simulación.\n\nuna vez realizadas las pruebas,\nentonces procederemos a realizar \nla aplicacion de la simulacion del\nalmacen\n\n"); // NOI18N
        PanelIzqProyecto.setFocusable(false);

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(19, 23, 31));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Open Sans Light", 0, 13)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("PROYECTO DE SIMULACIÓN\n\n\n\n\nDesarolladores.\nJennifer Janeth Llamas Lucas\nAdán Ramirez Grande\n\n\n\n\nProfesor. \nJuan Rogelio Orozco Garibay.");
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextArea1.setDisabledTextColor(new java.awt.Color(19, 23, 31));
        jTextArea1.setDoubleBuffered(true);
        jTextArea1.setFocusable(false);
        jScrollPane4.setViewportView(jTextArea1);

        javax.swing.GroupLayout PanelIzqProyectoLayout = new javax.swing.GroupLayout(PanelIzqProyecto);
        PanelIzqProyecto.setLayout(PanelIzqProyectoLayout);
        PanelIzqProyectoLayout.setHorizontalGroup(
            PanelIzqProyectoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelIzqProyectoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                .addContainerGap())
        );
        PanelIzqProyectoLayout.setVerticalGroup(
            PanelIzqProyectoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelIzqProyectoLayout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 561, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        getContentPane().add(PanelIzqProyecto, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 600));

        panelOpciones.setBackground(new java.awt.Color(240, 239, 209));
        panelOpciones.setLayout(new java.awt.GridLayout(1, 0));

        btnGenerarNumeros.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        btnGenerarNumeros.setForeground(new java.awt.Color(51, 51, 51));
        btnGenerarNumeros.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/FontAwesome_f00a(2)_48.png"))); // NOI18N
        btnGenerarNumeros.setText("Generador de Números");
        btnGenerarNumeros.setBorderPainted(false);
        btnGenerarNumeros.setDoubleBuffered(true);
        btnGenerarNumeros.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGenerarNumeros.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGenerarNumeros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarNumerosActionPerformed(evt);
            }
        });
        panelOpciones.add(btnGenerarNumeros);

        bntInicio.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        bntInicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Entypo_2302(0)_48.png"))); // NOI18N
        bntInicio.setText("Inicio");
        bntInicio.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bntInicio.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bntInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntInicioActionPerformed(evt);
            }
        });
        panelOpciones.add(bntInicio);

        btnAplicacion.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        btnAplicacion.setForeground(new java.awt.Color(102, 102, 102));
        btnAplicacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/octicons_f043(1)_48.png"))); // NOI18N
        btnAplicacion.setText("Aplicacion");
        btnAplicacion.setToolTipText("");
        btnAplicacion.setEnabled(false);
        btnAplicacion.setHideActionText(true);
        btnAplicacion.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAplicacion.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAplicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAplicacionActionPerformed(evt);
            }
        });
        panelOpciones.add(btnAplicacion);

        getContentPane().add(panelOpciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 500, 860, 100));

        PanelApp.setBackground(new java.awt.Color(99, 194, 235));
        PanelApp.setMaximumSize(new java.awt.Dimension(860, 300));
        PanelApp.setMinimumSize(new java.awt.Dimension(860, 300));
        PanelApp.setPreferredSize(new java.awt.Dimension(860, 300));
        PanelApp.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        PanelApp.add(LabelFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 30, -1, 200));

        txtConclusionSimulacion.setEditable(false);
        txtConclusionSimulacion.setBackground(new java.awt.Color(105, 92, 75));
        txtConclusionSimulacion.setColumns(20);
        txtConclusionSimulacion.setFont(new java.awt.Font("Open Sans Light", 0, 13)); // NOI18N
        txtConclusionSimulacion.setForeground(new java.awt.Color(255, 255, 255));
        txtConclusionSimulacion.setLineWrap(true);
        txtConclusionSimulacion.setRows(5);
        txtConclusionSimulacion.setWrapStyleWord(true);
        txtConclusionSimulacion.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CONCLUSIÓN DE RESULTADOS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Open Sans Light", 0, 14), java.awt.Color.white)); // NOI18N
        txtConclusionSimulacion.setDisabledTextColor(new java.awt.Color(19, 23, 31));
        txtConclusionSimulacion.setDoubleBuffered(true);
        txtConclusionSimulacion.setFocusable(false);
        jScrollPane5.setViewportView(txtConclusionSimulacion);

        PanelApp.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 210, 240, 280));

        TablaResultados.setBackground(new java.awt.Color(244, 174, 0));
        TablaResultados.setForeground(new java.awt.Color(255, 255, 255));
        TablaResultados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mes", "Inv. Inicial", "N.PA.", "Demanda Aj", "Inv.Final", "Faltante", "Orden", "Inv.Mensual"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaResultados.setFillsViewportHeight(true);
        TablaResultados.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(TablaResultados);

        PanelApp.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 580, 200));

        panelDatos.setBackground(new java.awt.Color(99, 194, 235));
        panelDatos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(33, 140, 208), 2));

        btnIniciarSimulacion.setFont(new java.awt.Font("Open Sans Light", 1, 14)); // NOI18N
        btnIniciarSimulacion.setForeground(new java.awt.Color(102, 102, 102));
        btnIniciarSimulacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/FontAwesome_f04b(0)_48.png"))); // NOI18N
        btnIniciarSimulacion.setText("Iniciar");
        btnIniciarSimulacion.setToolTipText("");
        btnIniciarSimulacion.setContentAreaFilled(false);
        btnIniciarSimulacion.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnIniciarSimulacion.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnIniciarSimulacion.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        btnIniciarSimulacion.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnIniciarSimulacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarSimulacionActionPerformed(evt);
            }
        });

        qtext.setText("50");

        invItext.setText("150");

        labelR2.setFont(new java.awt.Font("Open Sans Light", 1, 14)); // NOI18N
        labelR2.setText("R");

        labelQ.setFont(new java.awt.Font("Open Sans Light", 1, 14)); // NOI18N
        labelQ.setText("Q");

        labelInventario.setFont(new java.awt.Font("Open Sans Light", 1, 14)); // NOI18N
        labelInventario.setText("INV.");

        rtext.setText("80");

        javax.swing.GroupLayout panelDatosLayout = new javax.swing.GroupLayout(panelDatos);
        panelDatos.setLayout(panelDatosLayout);
        panelDatosLayout.setHorizontalGroup(
            panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelDatosLayout.createSequentialGroup()
                        .addComponent(labelQ, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(qtext, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDatosLayout.createSequentialGroup()
                        .addComponent(labelInventario, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(invItext, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDatosLayout.createSequentialGroup()
                        .addComponent(labelR2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rtext, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnIniciarSimulacion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        panelDatosLayout.setVerticalGroup(
            panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDatosLayout.createSequentialGroup()
                .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDatosLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(labelR2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDatosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(rtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(qtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelQ))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(invItext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelInventario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnIniciarSimulacion, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        PanelApp.add(panelDatos, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 180, 200));

        LabelFondo2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/estanteanimado.png"))); // NOI18N
        PanelApp.add(LabelFondo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, 630, 200));

        getContentPane().add(PanelApp, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 0, 860, 500));

        PanelGenerador.setMaximumSize(new java.awt.Dimension(860, 300));
        PanelGenerador.setMinimumSize(new java.awt.Dimension(860, 300));
        PanelGenerador.setPreferredSize(new java.awt.Dimension(860, 300));
        PanelGenerador.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PanelGeneradorContenedor.setBackground(new java.awt.Color(244, 174, 0));
        PanelGeneradorContenedor.setMaximumSize(new java.awt.Dimension(860, 290));
        PanelGeneradorContenedor.setPreferredSize(new java.awt.Dimension(860, 290));
        PanelGeneradorContenedor.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        inputA.setText("101");
        PanelGeneradorContenedor.add(inputA, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 50, 60, -1));

        inputC.setText("221");
        PanelGeneradorContenedor.add(inputC, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 80, 60, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("a");
        PanelGeneradorContenedor.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 50, -1, -1));

        inputXo.setText("17");
        PanelGeneradorContenedor.add(inputXo, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 110, 60, -1));

        inputCiclos.setText("350");
        PanelGeneradorContenedor.add(inputCiclos, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 170, 60, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Iteracion");
        PanelGeneradorContenedor.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 170, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("xo");
        PanelGeneradorContenedor.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 110, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("c");
        PanelGeneradorContenedor.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 80, -1, -1));

        btnGenerar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnGenerar.setForeground(new java.awt.Color(255, 255, 255));
        btnGenerar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/FontAwesome_f05d(1)_48.png"))); // NOI18N
        btnGenerar.setText("Generar");
        btnGenerar.setBorderPainted(false);
        btnGenerar.setContentAreaFilled(false);
        btnGenerar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGenerar.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });
        PanelGeneradorContenedor.add(btnGenerar, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 220, 82, 65));

        tablaNumeros.setBackground(new java.awt.Color(244, 174, 0));
        tablaNumeros.setFont(new java.awt.Font("Open Sans Light", 0, 14)); // NOI18N
        tablaNumeros.setForeground(new java.awt.Color(255, 255, 255));
        tablaNumeros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Indice", "Numero P.A.", "Division"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaNumeros.setFillsViewportHeight(true);
        tablaNumeros.setGridColor(new java.awt.Color(255, 255, 255));
        tablaNumeros.setSelectionBackground(new java.awt.Color(0, 204, 204));
        tablaNumeros.setSelectionForeground(new java.awt.Color(102, 102, 255));
        jScrollPane2.setViewportView(tablaNumeros);

        PanelGeneradorContenedor.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, 390, 250));

        jTextArea2.setEditable(false);
        jTextArea2.setBackground(new java.awt.Color(244, 174, 0));
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Open Sans Light", 0, 13)); // NOI18N
        jTextArea2.setForeground(new java.awt.Color(51, 51, 51));
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jTextArea2.setText("INGRESE VALORES DE LAS CONSTANTES.\n\nAntes de oprimir el boton GENERAR,\npuede seleccionar alguna prueba para aplicar los numeros generados.\n\nLos botones se encuentran en el lado inferior de la pantalla.\n");
        jTextArea2.setWrapStyleWord(true);
        jTextArea2.setDisabledTextColor(new java.awt.Color(244, 174, 0));
        jTextArea2.setDoubleBuffered(true);
        jTextArea2.setFocusable(false);
        jScrollPane6.setViewportView(jTextArea2);

        PanelGeneradorContenedor.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 210, 250));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("m");
        PanelGeneradorContenedor.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 140, -1, -1));

        inputM.setText("17001");
        PanelGeneradorContenedor.add(inputM, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 140, 60, -1));

        PanelGenerador.add(PanelGeneradorContenedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 870, 290));

        PanelPruebas.setBackground(new java.awt.Color(105, 92, 75));
        PanelPruebas.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        PanelPruebas.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 0, 10, 230));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Corridas por arriba y por abajo del promedio");
        PanelPruebas.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 10, -1, -1));

        TablaCorridas.setBackground(new java.awt.Color(105, 92, 75));
        TablaCorridas.setFont(new java.awt.Font("Open Sans Light", 0, 10)); // NOI18N
        TablaCorridas.setForeground(new java.awt.Color(255, 255, 255));
        TablaCorridas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "N0", "N1"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaCorridas.setFillsViewportHeight(true);
        TablaCorridas.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane3.setViewportView(TablaCorridas);

        PanelPruebas.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 40, 260, 150));

        tablaFrecuencia.setBackground(new java.awt.Color(105, 92, 75));
        tablaFrecuencia.setFont(new java.awt.Font("Open Sans Light", 0, 10)); // NOI18N
        tablaFrecuencia.setForeground(new java.awt.Color(255, 255, 255));
        tablaFrecuencia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "1", "2", "3", "4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaFrecuencia.setFillsViewportHeight(true);
        tablaFrecuencia.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane7.setViewportView(tablaFrecuencia);

        PanelPruebas.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 260, 150));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Prueba de la Frecuencia");
        PanelPruebas.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, -1));

        btnFrecuencia.setText("Realizar");
        btnFrecuencia.setToolTipText("Realizar la prueba de frecuencia");
        btnFrecuencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFrecuenciaActionPerformed(evt);
            }
        });
        PanelPruebas.add(btnFrecuencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 40, 90, 50));

        btnCorridas.setText("Realizar");
        btnCorridas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCorridasActionPerformed(evt);
            }
        });
        PanelPruebas.add(btnCorridas, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 40, 90, 50));

        PanelGenerador.add(PanelPruebas, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 290, 870, 210));

        getContentPane().add(PanelGenerador, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 0, 860, 500));
        PanelGenerador.getAccessibleContext().setAccessibleParent(this);

        PanelInicio.setBackground(new java.awt.Color(252, 255, 245));
        PanelInicio.setMaximumSize(new java.awt.Dimension(860, 500));
        PanelInicio.setMinimumSize(new java.awt.Dimension(860, 500));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/edificiofondo.png"))); // NOI18N

        javax.swing.GroupLayout PanelInicioLayout = new javax.swing.GroupLayout(PanelInicio);
        PanelInicio.setLayout(PanelInicioLayout);
        PanelInicioLayout.setHorizontalGroup(
            PanelInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelInicioLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(118, Short.MAX_VALUE))
        );
        PanelInicioLayout.setVerticalGroup(
            PanelInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelInicioLayout.createSequentialGroup()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(PanelInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 0, 860, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGenerarNumerosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarNumerosActionPerformed
        PanelInicio.setVisible(false);
        PanelGenerador.setVisible(true);
        PanelApp.setVisible(false);
    }//GEN-LAST:event_btnGenerarNumerosActionPerformed

    private void btnAplicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAplicacionActionPerformed
        PanelInicio.setVisible(false);
        PanelGenerador.setVisible(false);
        PanelApp.setVisible(true);
    }//GEN-LAST:event_btnAplicacionActionPerformed

    private void btnIniciarSimulacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarSimulacionActionPerformed
        r=Integer.parseInt(rtext.getText());
        q=Integer.parseInt(qtext.getText());
        invInicial=Integer.parseInt(invItext.getText());
        metodoCalculo();
      
        
        // TODO add your handling code here:
    }//GEN-LAST:event_btnIniciarSimulacionActionPerformed

    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        // FUNCION DE CALCULO DE NUMEROS
        
        //habilita la app
        btnAplicacion.setEnabled(true);
        
        //insertar valores a variables
        double a = Integer.parseInt(this.inputA.getText());
        double c = Integer.parseInt(this.inputC.getText());
        double Xo = Integer.parseInt(this.inputXo.getText());
        double M = Integer.parseInt(this.inputM.getText());
        ciclos=Integer.parseInt(this.inputCiclos.getText());
        
        //generar numeros y mostrarlos
        GenerarNumeros(a,c,Xo,M,ciclos);
        DefaultTableModel  modelo = new DefaultTableModel(datos,cabeceraGenerador);
        tablaNumeros.setModel(modelo);
       
        PseudoAleatorio=VectorDatos(datos);//me regresa un vector  
       
        if(realizarFrecuencia){pruebaFrecuencia();}
          
        if(realizarCorrida){pruebaCorrida();}
                      
    }//GEN-LAST:event_btnGenerarActionPerformed

    private void btnFrecuenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFrecuenciaActionPerformed
        realizarFrecuencia=(realizarFrecuencia)?false:true;
        JOptionPane.showMessageDialog(this,"Listo para aplicar Prueba Frecuencia","PRUEBA", ICONIFIED);
    }//GEN-LAST:event_btnFrecuenciaActionPerformed

    private void btnCorridasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCorridasActionPerformed
        realizarCorrida=(realizarCorrida)?false:true;
        JOptionPane.showMessageDialog(this,"Listo para aplicar Prueba Corridas","PRUEBA", ICONIFIED);
    }//GEN-LAST:event_btnCorridasActionPerformed

    private void bntInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntInicioActionPerformed
        PanelInicio.setVisible(true);
        PanelGenerador.setVisible(false);
        PanelApp.setVisible(false);
    }//GEN-LAST:event_bntInicioActionPerformed

    //METODOS DEL GENERADOR
    public void pruebaFrecuencia(){
    double limites=0.25;//el denominador sera un parametro enviado para pruebas posteriores
    double limiteInicial=limites;
     Double[][] datosFrecuencia=new Double[datos.length][4];
     int contador=0;
        for (int i = 0; i < 4; i++) {
            double limiteTemp=limites-limiteInicial;
             
            for (int j = 0; j <datos.length; j++) {
                if(datos[j][1] <= limites && datos[j][1]>limiteTemp ){
                 datosFrecuencia[contador][i]=datos[j][1];
                 contador++;
                }
                
            }
            limites+=limiteInicial;
        }
         String cabeceraFrecuencia[]={"1","2","3","4"};
        DefaultTableModel  modelo = new DefaultTableModel(datosFrecuencia, cabeceraFrecuencia);
 
      tablaFrecuencia.setModel(modelo);
    }
    
    public void pruebaCorrida(){
     
      Double datosCorrida[][]=new Double[datos.length][2];
      int Corrida=0;
      double limInicial=0;
      double limFinal=0.5;
     
      for(int i=0;i<2;i++)
          {
              
          for(int j=0;j<datos.length;j++)
          {
              
              if(datos[j][1]>limInicial && datos[j][1]<limFinal)
              {            
                   datosCorrida[Corrida][i]=datos[j][1];                     
                   Corrida++;   
                   n[i]++;
              }             
          }
              limInicial=limFinal;
              limFinal=1.0;
        }
             String cabeceraCorrida[]={"N0","N1"};
             DefaultTableModel  modelo = new DefaultTableModel(datosCorrida, cabeceraCorrida);
 
             double resultado;
             resultado=Z0(ValorEsperado(),Varianza());
             if(resultado>=-0.4 && resultado<=1.4 )
             {
            JOptionPane.showMessageDialog(null,"Los datos estan ordenados proporcionalmente. Ya puedes hacer la simulacion!");
             }
             else 
                 JOptionPane.showMessageDialog(null,"Los datos estan NO ordenados proporcionalmente.Prueba con otros valores!");
                 
                 
            TablaCorridas.setModel(modelo);
                 
            
            
    }
    
    public  Double[][] GenerarNumeros(double a,double c,double Xo,double M,int ciclos){
    datos=new Double[ciclos][3];
          double temp=0;
        for (int i = 0; i < ciclos; i++) 
        {
            if(i == 0 )
            {
                temp =((a * Xo + c) % (M)); 
              }
            else {
               temp=((a * temp + c) % M);
            }
           datos[i][0]= new Double(i+1).doubleValue();
           datos[i][1]  = temp / M;
           
           datos[i][2]=temp;      
        }     
        return datos;
    }
    
    public Double[] VectorDatos(Double[][] datos)
    {
       DatosGenerados = new Double[ciclos];
        for(int i=0;i<ciclos;i++)
        {
        DatosGenerados[i]=datos[i][1];
        }
        return DatosGenerados;
    }
   
    public Double ValorEsperado()
    { 
        double valEsp;
        int i=0;
        valEsp=((2*n[i]*n[i+1])/ciclos) + 0.5;
        return valEsp;
    }
    
    public Double Varianza()
    {
        double var;
        int i=0;
        double p1=(2*n[i]*n[i+1]);
        double p2=2*n[i]*n[i+1]-ciclos;
        double p3=Math.pow(ciclos,2)*(ciclos-1);
        var=(p1*p2)/p3;
        return var;
    
    }
    
    public Double Z0(double valEsp,double var)
    {
        double zo;
        zo=(valEsp-var)/var;
        return zo;
    }
    //quien te conoce burbuja :v
   public void OrdenarDatos(Double[] datos){
    double temp;
        for(int i=1;i<datos.length;i++)
        {
                    
            for(int n=datos.length-1;n>=i;n--)
            {
                  
                if(datos[n-1]>datos[n])
                {
                    
                    temp=datos[n-1];
                    datos[n-1]=datos[n];
                    datos[n]=temp;
                }
            }
        }
    }
    
   public void Conclusiones(Double[][] datos,int contador,double costoF,double inv)
   {
       int c=0;
       int m=0;
       int c2=0;
       for(int i=0;i<12;i++)
       {      
         if(datos[i][4]<0.0)
         {
             c++;
             
         }
         
         for(int x=0;x<12;x++)
         {
         if(datos[x][7]==0.0)
         {
              c2++;
             m=x+1;
             break;
         }
         }
          
       }
       double totalOrdenes=contador*100;
       double totalInventario=inv*20*1;
       double costoFalt=50*costoF;
       
       if(c2<0.0)
           txtConclusionSimulacion.setText("Tienes "+c+" meses con deudas.\n Te quedaste sin recursos a partir del "+m+" mes.\nLos numeros que utilizaste no son adecuados para tu almacen.\nIntenta con otros ");
//       else if( c2<0)
//           txtConclusionSimulacion.setText("Tienes"+c+" meses de deudas.\n.Te quedaste sin recursos a partir del "+m+" mes Los numeros que utilizaste son buenos para tu almacen.");
       else if(c2>0.0&&c>0.0)
           txtConclusionSimulacion.setText("Los numeros que utilizaste son buenos para tu almacen.\n La simulacion ha sido un exito!");
  
     String conclusion= txtConclusionSimulacion.getText() + "\n COSTO DE ORDENAR: $" + totalOrdenes +" \n COSTO DE INVENTARIO :$ "+ totalInventario +" \n COSTO FALTANTE: $"+costoFalt;
     txtConclusionSimulacion.setText(conclusion);
   }
    //METODOS DE LA APLICACION
     public void metodoCalculo(){ //tecnicamente hace todo 
          boolean faltan;
          boolean llego=false;
         
         Double demanda;
         int contadorOrdenes=0;
         double costoFaltante=0.0;
         int mes;
         
        
         datos=new Double[12][8];
         int c=0;
         
        
         for (int i = 0; i <12 ;i++) {
            
               mes=(datos[i][0]=(double)i+1).intValue();//mes  

                        
                 if(llego)//i
                 {
                     datos[i][1]=(double)invInicial+q;
                    // hayPedido=false;
                 }
                 else
                 {         
                        datos[i][1]=(double)invInicial;
                  }
                        
                       
                    
               
               datos[i][2]=PseudoAleatorio[c];//num pseudoaleatorio nato
               
               datos[i][3]=checarPseudo(c)*Meses[i][1];//retorna el valor de la demanda ajustada
               
               demanda=datos[i][3];//copia el numero pseudoaleatorio
               invFinal=invInicial-demanda.intValue();//calculo para no hacerlo en la linea del arreglo y almacenar la variable               
               datos[i][4]=(double)invFinal;
     
               
               datos[i][5]=Faltante(demanda,invFinal,invInicial);//regresa un entero
               if(datos[i][5]>0.0)faltan=true;              
               else  faltan=false;
              
               
                if(invFinal<=r)
                {
                    
                         if(mesllegada>0){
                             mesllegada--;
                             llego=(mesllegada==0);
                         }
                         else{
                         contadorOrdenes++;
                        mesllegada =solicitarPedido(PseudoAleatorio[c]);
                       
                        datos[i][6]= (double)mesllegada;
                         
                         }
                       // JOptionPane.showMessageDialog(null,ordenes);
                       // hayPedido=true;  
                }
                            

               datos[i][7]=invMensual(faltan);
              costoFaltante =(faltan)?datos[i][5]:0.0;

            c++;
            
            invInicial=invFinal;
           
    
        }//fin for
        
        crearTabla();
          Conclusiones(datos,contadorOrdenes,costoFaltante,invInicial);
    }
    
     public double checarPseudo(int indice){
     double valor=(double)PseudoAleatorio[indice];
        for(int i = 0; i < DemandaMensual.length; i++) {
                 if(valor>=DemandaMensual[i][1] && valor<=DemandaMensual[i][2])
                   valor=DemandaMensual[i][0];
        }
       return valor;
    }
     
     public int solicitarPedido(double numPseudo){
        for (int i = 0; i < TiempoEntrega.length; i++) {
                 if(numPseudo>=TiempoEntrega[i][1] && numPseudo<=TiempoEntrega[i][2])
                 {
                 meses=(TiempoEntrega[i][0]).intValue();
                
                 }
                 
        }
         return meses;
     }
     
     public double Faltante(double demanda, double invFinal,int invInicial)
     {
         double faltante;
            if(invFinal>0)
            {
               faltante=0.0;
            }
            else
            {          
               faltante=Math.abs(demanda-invInicial);
            }
     
     return faltante;
     }
     public double invMensual(boolean faltan){
        if(faltan==false)
        {
            return (invInicial+invFinal)/2;
        }
        else
        {
          if(invInicial==0)
          return ((invInicial)/2)+(invInicial/demandaAjustada);
          else return 0.00;
        }
     }
     
     public void crearTabla(){
       tabla= new DefaultTableModel(datos,cabeceraApp);
        TablaResultados.setModel(tabla);
     }
     
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelFondo;
    private javax.swing.JLabel LabelFondo2;
    private javax.swing.JPanel PanelApp;
    private javax.swing.JPanel PanelGenerador;
    private javax.swing.JPanel PanelGeneradorContenedor;
    private javax.swing.JPanel PanelInicio;
    private javax.swing.JPanel PanelIzqProyecto;
    private javax.swing.JPanel PanelPruebas;
    private javax.swing.JTable TablaCorridas;
    private javax.swing.JTable TablaResultados;
    private javax.swing.JButton bntInicio;
    private javax.swing.JButton btnAplicacion;
    private javax.swing.JToggleButton btnCorridas;
    private javax.swing.JToggleButton btnFrecuencia;
    private javax.swing.JButton btnGenerar;
    private javax.swing.JButton btnGenerarNumeros;
    private javax.swing.JButton btnIniciarSimulacion;
    private javax.swing.JTextField inputA;
    private javax.swing.JTextField inputC;
    public static javax.swing.JTextField inputCiclos;
    private javax.swing.JTextField inputM;
    private javax.swing.JTextField inputXo;
    private javax.swing.JTextField invItext;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JLabel labelInventario;
    private javax.swing.JLabel labelQ;
    private javax.swing.JLabel labelR2;
    private javax.swing.JPanel panelDatos;
    private javax.swing.JPanel panelOpciones;
    private javax.swing.JTextField qtext;
    private javax.swing.JTextField rtext;
    private javax.swing.JTable tablaFrecuencia;
    private javax.swing.JTable tablaNumeros;
    private javax.swing.JTextArea txtConclusionSimulacion;
    // End of variables declaration//GEN-END:variables
}
